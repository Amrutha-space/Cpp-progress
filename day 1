#include <iostream>
using namespace std;
 int main() {
   int x = 5; 
   int y = 6;
   int sum = x+y;
   double gpa = 9;
   cout << gpa <<'\n';
   char grade = 'A';
   char dollarSign = '$';
   cout << dollarSign << '\n';
   bool student = true;
   bool power = false;

   string name = "aishh";
   cout << name <<'\n';
   cout << "Hello "<< name <<'\n';
   cout << "gpa is " << gpa << '\n';
    const double PI = 3.141;
   double pi = 39.12;
   double radius = 10;
   double circumference = 2 * PI * radius;
   cout << circumference << " cm";
    return 0; 
 }



### for namespace 
#include <iostream>
 namespace first{
    int x = 1;
}
namespace second{
    int x = 2;
}
int main() {
    int x = 0;
    std::cout << first::x;
    return 0;
}

##
#include <iostream>
  
int main() {
    using namespace std;

    string name = "Bro";

    cout << "Hello " << name;

    return 0;
}


##typedef keyword

#include <iostream>
#include <vector>
typedef std::vector<std::pair<std::string, int>> pairlist_t;
  
int main() {
  pairlist_t pairlist;

    return 0;
}
Imagine you have a friend named "Christopher". You call him "Chris" because it's shorter and easier.
Similarly, typedef lets you call a data type something shorter or clearer.
